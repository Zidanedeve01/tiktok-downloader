---
import Notifications from './Notifications.astro';
import { isValidTikTokUrl } from '../utils/api.ts';

let url = new URL(Astro.request.url);
let inputValue = url.searchParams.get('input') || '';
let errorMessage = '';
if (Astro.request.method === 'POST') {
  const formData = await Astro.request.formData();
  const input = formData.get('input')?.toString() || '';
  if (!input.trim()) {
    errorMessage = 'Masukkan URL TikTok atau kata kunci pencarian';
  } else if (isValidTikTokUrl(input)) {
    inputValue = input;
  } else {
    inputValue = input;
  }
}
---
  <div class="relative">
    <div class="relative bg-black border border-white rounded-xl sm:rounded-2xl lg:rounded-3xl p-4 sm:p-6 lg:p-8 xl:p-10">
    <div class="text-center mb-4 sm:mb-6 lg:mb-8 xl:mb-10 relative z-10">
      <h2 class="text-xl sm:text-2xl lg:text-3xl xl:text-3xl 2xl:text-3xl font-black text-white mb-2 sm:mb-3 lg:mb-4 xl:mb-6">
        <span class="text-white">
          TikTok Downloader
        </span>
        <span class="text-white/90"> & </span>
        <span class="text-white">
          Search
        </span>
      </h2>
      <div class="flex items-center justify-center gap-2 lg:gap-3 xl:gap-4 mb-2 sm:mb-3 lg:mb-4 xl:mb-6">
        <div class="w-2 h-2 lg:w-3 lg:h-3 xl:w-4 xl:h-4 bg-white rounded-full"></div>
        <div class="w-2 h-2 lg:w-3 lg:h-3 xl:w-4 xl:h-4 bg-white rounded-full"></div>
        <div class="w-2 h-2 lg:w-3 lg:h-3 xl:w-4 xl:h-4 bg-white rounded-full"></div>
      </div>
    </div>
    <form id="searchForm" class="space-y-3 sm:space-y-4 lg:space-y-6 xl:space-y-8 relative z-10" action="/search" method="GET" onsubmit="return handleFormSubmitFallback(event)">
      <div class="relative flex gap-2 sm:gap-3 lg:gap-4 xl:gap-6">
        <div class="flex-1 relative">
          <input 
            type="text" 
            name="q"
            placeholder="Masukkan URL TikTok atau kata kunci pencarian..." 
            required
            value={inputValue}
            class="w-full px-3 sm:px-4 lg:px-6 xl:px-6 py-2 sm:py-3 lg:py-4 xl:py-4 bg-black border border-white rounded-lg sm:rounded-xl lg:rounded-2xl text-white placeholder-white/60 focus:outline-none focus:ring-2 focus:ring-white focus:border-white text-sm sm:text-base lg:text-lg xl:text-lg font-medium transition-all duration-300 hover:border-white"
          />
        </div>
        <button 
          type="button"
          id="pasteButton"
          class="px-3 sm:px-4 lg:px-6 xl:px-6 py-2 sm:py-3 lg:py-4 xl:py-4 bg-white hover:bg-white/90 text-black rounded-lg sm:rounded-xl lg:rounded-2xl font-bold transition-all duration-300 flex items-center justify-center min-w-[50px] sm:min-w-[60px] lg:min-w-[80px] xl:min-w-[80px] group border border-white"
          title="Paste URL dari clipboard (atau gunakan Ctrl+V)"
        >
          <i class="fas fa-paste text-sm sm:text-base lg:text-lg xl:text-lg"></i>
        </button>
      </div>
      <button 
        type="submit"
        class="w-full bg-white hover:bg-white/90 text-black px-4 sm:px-6 lg:px-8 xl:px-8 py-2 sm:py-3 lg:py-4 xl:py-4 rounded-lg sm:rounded-xl lg:rounded-2xl font-bold text-sm sm:text-base lg:text-lg xl:text-lg transition-all duration-300 border border-white"
      >
        <i class="fas fa-magic mr-2 lg:mr-3 xl:mr-4"></i>
        <span>Process</span>
      </button>
    </form>
    {errorMessage && (
      <div class="mt-3 sm:mt-4 text-red-400 text-center font-medium bg-black border border-red-500 rounded-lg p-2 sm:p-3 relative z-10">
        <div class="flex items-center justify-center gap-2">
          <i class="fas fa-exclamation-triangle text-red-400"></i>
          <span>{errorMessage}</span>
        </div>
      </div>
    )}
    <div class="mt-4 sm:mt-6 lg:mt-8 xl:mt-10 text-center relative z-10">
      <div class="grid grid-cols-1 md:grid-cols-2 gap-2 sm:gap-3 lg:gap-4 xl:gap-6 text-sm lg:text-base xl:text-lg">
        <div class="bg-black border border-white rounded-lg lg:rounded-xl p-2 sm:p-3 lg:p-4 xl:p-5">
          <div class="flex items-center justify-center gap-2 lg:gap-3 mb-1 lg:mb-2">
            <i class="fas fa-download text-white text-sm lg:text-base xl:text-lg"></i>
            <strong class="text-white text-sm lg:text-base xl:text-lg">Download</strong>
          </div>
          <p class="text-white/80 text-xs lg:text-sm xl:text-base">Paste URL TikTok untuk download langsung</p>
        </div>
        <div class="bg-black border border-white rounded-lg lg:rounded-xl p-2 sm:p-3 lg:p-4 xl:p-5">
          <div class="flex items-center justify-center gap-2 lg:gap-3 mb-1 lg:mb-2">
            <i class="fas fa-search text-white text-sm lg:text-base xl:text-lg"></i>
            <strong class="text-white text-sm lg:text-base xl:text-lg">Search</strong>
          </div>
          <p class="text-white/80 text-xs lg:text-sm xl:text-base">Masukkan kata kunci untuk mencari video</p>
        </div>
      </div>
      <div class="mt-2 sm:mt-3 lg:mt-4 xl:mt-6 text-center">
        <div class="flex flex-col items-center gap-1 lg:gap-2">
          <span class="text-white/80 text-xs lg:text-sm xl:text-base font-medium bg-black border border-white px-2 sm:px-3 lg:px-4 xl:px-5 py-1 lg:py-2 rounded-full">
            ðŸ’¡ Klik tombol paste atau gunakan Ctrl+V untuk memasukkan URL
          </span>
          <span class="text-white/50 text-xs lg:text-sm xl:text-base">
            Jika tombol paste tidak bekerja, klik pada input field dan tekan Ctrl+V
          </span>
        </div>
      </div>
    </div>
  </div>
</div>
<Notifications />
<script>
  function checkClipboardSupport() {
    return navigator.clipboard && navigator.clipboard.readText && 
           (location.protocol === 'https:' || location.hostname === 'localhost');
  }
  
  function handleFormSubmitFallback(event) {
    console.log('SearchInput: Fallback form submission triggered');
    const form = event.target;
    const input = form.querySelector('input[name="q"]');
    const inputValue = input.value.trim();
    
    if (!inputValue) {
      alert('Masukkan URL TikTok atau kata kunci pencarian!');
      return false;
    }
    
    if (inputValue.includes('tiktok.com') || inputValue.includes('vm.tiktok.com') || inputValue.includes('vt.tiktok.com')) {
      window.location.href = `/video?url=${encodeURIComponent(inputValue)}`;
      return false;
    }
    
    return true;
  }
  
  window.handleFormSubmitFallback = handleFormSubmitFallback;
  document.addEventListener('DOMContentLoaded', () => {
    console.log('SearchInput: DOM Content Loaded');
    let pasteButton = document.getElementById('pasteButton');
    let input = document.querySelector('input[name="q"]');
    let form = document.getElementById('searchForm');
    
    if (!form) {
      console.error('SearchInput: Form not found!');
      return;
    }
    
    if (!input) {
      console.error('SearchInput: Input not found!');
      return;
    }
    
    if (!pasteButton) {
      console.error('SearchInput: Paste button not found!');
      return;
    }
    
    if (!checkClipboardSupport()) {
      pasteButton.title = 'Clipboard tidak didukung di HTTP - gunakan Ctrl+V';
      pasteButton.classList.add('opacity-75');
    }
    
    input.addEventListener('focus', () => {
      input.select();
    });
    document.getElementById('pasteButton').addEventListener('click', async () => {
      let button = document.getElementById('pasteButton');
      let originalIcon = button.innerHTML;
      button.innerHTML = '<i class="fas fa-spinner fa-spin text-xl"></i>';
      button.disabled = true;
      try {
        if (navigator.clipboard && navigator.clipboard.readText) {
          let text = await navigator.clipboard.readText();
          if (text && text.trim()) {
            input.value = text;
            input.focus();
            button.innerHTML = '<i class="fas fa-check text-xl text-green-400"></i>';
            setTimeout(() => {
              button.innerHTML = originalIcon;
              button.disabled = false;
            }, 1000);
            return;
          }
        }
        input.focus();
        input.select();
        button.innerHTML = '<i class="fas fa-info text-xl text-blue-400"></i>';
        setTimeout(() => {
          button.innerHTML = originalIcon;
          button.disabled = false;
        }, 1500);
      } catch (err) {
        input.focus();
        input.select();
        button.innerHTML = '<i class="fas fa-info text-xl text-blue-400"></i>';
        setTimeout(() => {
          button.innerHTML = originalIcon;
          button.disabled = false;
        }, 1500);
      }
    });
    function handleFormSubmit() {
      console.log('SearchInput: handleFormSubmit called');
      const form = document.getElementById('searchForm');
      const input = form.querySelector('input[name="q"]');
      const inputValue = input.value.trim();
      
      console.log('SearchInput: Input value:', inputValue);
      
      if (!inputValue) {
        console.log('SearchInput: No input value');
        if (typeof showNotification !== 'undefined' && showNotification && showNotification.error) {
          showNotification.error('Masukkan URL TikTok atau kata kunci pencarian!', 3000);
        } else {
          alert('Masukkan URL TikTok atau kata kunci pencarian!');
        }
        return;
      }
      
      const endpoint = inputValue.includes('tiktok.com') || inputValue.includes('vm.tiktok.com') || inputValue.includes('vt.tiktok.com') 
        ? 'download' 
        : 'search';
      
      console.log('SearchInput: Proceeding with redirect');
      if (inputValue.includes('tiktok.com') || inputValue.includes('vm.tiktok.com') || inputValue.includes('vt.tiktok.com')) {
        const redirectUrl = `/video?url=${encodeURIComponent(inputValue)}`;
        console.log('SearchInput: Redirecting to video page:', redirectUrl);
        try {
          window.location.href = redirectUrl;
        } catch (error) {
          console.error('SearchInput: Error redirecting to video page:', error);
          alert('Error redirecting to video page. Please try again.');
        }
      } else {
        const redirectUrl = `/search?q=${encodeURIComponent(inputValue)}`;
        console.log('SearchInput: Redirecting to search page:', redirectUrl);
        try {
          window.location.href = redirectUrl;
        } catch (error) {
          console.error('SearchInput: Error redirecting to search page:', error);
          alert('Error redirecting to search page. Please try again.');
        }
      }
    }
    document.addEventListener('keydown', (e) => {
      if ((e.ctrlKey || e.metaKey) && e.key === 'v') {
        let activeElement = document.activeElement;
        if (activeElement && activeElement.name === 'input') {
          setTimeout(() => {
            if (activeElement.value.trim()) {
              setTimeout(() => {
                handleFormSubmit();
              }, 500);
            }
          }, 100);
        }
      }
    });
    form.addEventListener('submit', (e) => {
      console.log('SearchInput: Form submit event triggered');
      e.preventDefault();
      handleFormSubmit();
    });
    
    const submitButton = form.querySelector('button[type="submit"]');
    console.log('SearchInput: Submit button found:', !!submitButton);
    if (submitButton) {
      submitButton.addEventListener('click', (e) => {
        console.log('SearchInput: Submit button clicked');
        e.preventDefault();
        handleFormSubmit();
      });
    } else {
      console.error('SearchInput: Submit button not found!');
    }
    
    console.log('SearchInput: All event listeners attached successfully');
  });
</script>